(window.webpackJsonp=window.webpackJsonp||[]).push([[4],{316:function(s,t,a){s.exports=a.p+"assets/img/login.87ffedf5.png"},317:function(s,t,a){s.exports=a.p+"assets/img/select.db44d7cf.png"},318:function(s,t,a){s.exports=a.p+"assets/img/setp1.d0bb3abe.png"},319:function(s,t,a){s.exports=a.p+"assets/img/setp2.3387ec4a.png"},320:function(s,t,a){s.exports=a.p+"assets/img/setp3.1056cda4.png"},321:function(s,t,a){s.exports=a.p+"assets/img/error.92ee3846.png"},322:function(s,t,a){s.exports=a.p+"assets/img/error-source.280792b5.png"},416:function(s,t,a){"use strict";a.r(t);var e=a(10),n=Object(e.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"解决方案sentry"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解决方案sentry"}},[s._v("#")]),s._v(" 解决方案Sentry")]),s._v(" "),t("p",[s._v("很多中小团队，希望集成页面监控，但受限于资源等条件，无法自研监控系统。这时候就需要一个现成的解决方案。这里推荐"),t("a",{attrs:{href:"https://sentry.io/welcome/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Sentry"),t("OutboundLink")],1)]),s._v(" "),t("p",[s._v("Sentry 是一个基于 Django 构建的现代化的实时事件日志监控、记录和聚合平台，主要用于如何快速的发现故障。支持几乎所有主流开发语言和平台，并提供了现代化 UI, 它专门用于监视错误和提取执行适当的事后操作所需的所有信息，而无需使用标准用户反馈循环的任何麻烦。")]),s._v(" "),t("h2",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),t("p",[s._v("Sentry 提供了商用的Sass服务，可以直接在官网使用以及开源的版本，可以自行私有化部署。")]),s._v(" "),t("p",[s._v("私有化部署可以通过Python安装和Docker安装两种方式。个人强烈推荐使用Docker进行安装，以免还需要去研究各种配套设置的安装配置，如Kafka、Redis等。")]),s._v(" "),t("h3",{attrs:{id:"前期准备"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#前期准备"}},[s._v("#")]),s._v(" 前期准备")]),s._v(" "),t("ul",[t("li",[s._v("Python3")]),s._v(" "),t("li",[s._v("Docker 19.03.6+")]),s._v(" "),t("li",[s._v("Compose 1.28.0+")]),s._v(" "),t("li",[s._v("4 CPU Cores")]),s._v(" "),t("li",[s._v("8 GB RAM")]),s._v(" "),t("li",[s._v("20 GB 磁盘空间")])]),s._v(" "),t("h3",{attrs:{id:"安装-sentry"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-sentry"}},[s._v("#")]),s._v(" 安装 Sentry")]),s._v(" "),t("ol",[t("li",[s._v("获取git仓库")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clone https://github.com/getsentry/self-hosted.git\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[s._v("执行脚本")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" self-hosted\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" ./install.sh\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("安装过程有些慢，在安装过程中，系统会提示是否要创建用户帐户，按照提示输入即可。")]),s._v(" "),t("ol",{attrs:{start:"3"}},[t("li",[s._v("设置基本配置\nSentry的安装向导会提示你设置一些基本的配置选项。具体配置项可参考"),t("a",{attrs:{href:"https://develop.sentry.dev/config/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官网"),t("OutboundLink")],1)])]),s._v(" "),t("h3",{attrs:{id:"启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[s._v("#")]),s._v(" 启动")]),s._v(" "),t("p",[s._v("等安装完成后，使用docker-compose 启动服务")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("docker-compose up -d\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("浏览器内访问localhost:9000，登陆安装时创建的用户账号，就可以访问sentry了")]),s._v(" "),t("p",[t("img",{attrs:{src:a(316),alt:"登陆"}})]),s._v(" "),t("h2",{attrs:{id:"接入"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#接入"}},[s._v("#")]),s._v(" 接入")]),s._v(" "),t("p",[s._v("正常启动Sentry后，我们就可以为自己的项目创建一个project，先选择语言或者框架（以Vue为例）\n"),t("img",{attrs:{src:a(317),alt:"创建项目"}})]),s._v(" "),t("p",[s._v("选择Vue项目，并且点击"),t("code",[s._v("Create Project")]),s._v("按钮")]),s._v(" "),t("p",[s._v("按照示例代码，在自己的项目中接入sdk，并调用\n"),t("img",{attrs:{src:a(318),alt:"Vue SDK"}}),s._v(" "),t("img",{attrs:{src:a(319),alt:"Vue SDK"}}),s._v(" "),t("img",{attrs:{src:a(320),alt:"Vue SDK"}})]),s._v(" "),t("p",[s._v("更多语言或者框架的接入方式，可以参考"),t("a",{attrs:{href:"https://docs.sentry.io/",target:"_blank",rel:"noopener noreferrer"}},[s._v("接入方法"),t("OutboundLink")],1)]),s._v(" "),t("h2",{attrs:{id:"解析错误"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#解析错误"}},[s._v("#")]),s._v(" 解析错误")]),s._v(" "),t("p",[s._v("当我们尝试在生产环境手动抛出错误，并在Sentry 平台查看")]),s._v(" "),t("div",{staticClass:"language-vue line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-vue"}},[t("code",[s._v("<div\n  className={style['hit']}\n  onClick={() => {\n    throw Error('报错啦=====这里')\n  }}>\n  点击报错\n"),t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token tag"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("div")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("我们会发现，在Issues中，可以找到刚抛出的错误，但并不能准确的找到源代码的错误位置，只有编译后代码的错误位置。\n"),t("img",{attrs:{src:a(321),alt:"error"}}),s._v("\n这是因为我们在生产环境运行的是编译过后的代码，本身报错堆栈就不是源代码的堆栈，如果想查看源代码的堆栈报错，我们可以将sourceMap上传到Sentry，借助sourceMap来定位源码。")]),s._v(" "),t("ol",[t("li",[s._v("首先安装"),t("a",{attrs:{href:"https://www.npmjs.com/package/@sentry/webpack-plugin",target:"_blank",rel:"noopener noreferrer"}},[s._v("@sentry/webpack-plugin"),t("OutboundLink")],1),s._v("这个包")])]),s._v(" "),t("div",{staticClass:"language-shell line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-shell"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" i @sentry/webpack-plugin\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ol",{attrs:{start:"2"}},[t("li",[s._v("在webpack中使用插件")])]),s._v(" "),t("div",{staticClass:"language-js line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-js"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("const")]),s._v(" SentryWebpackPlugin "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("require")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'@sentry/webpack-plugin'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 一般线上选择hidden-source-map模式 测试环境选用source-map")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("devtool")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'source-map'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将 Webpack 插件设置为最后运行的插件  否则插件收到的 source maps 可能不是最终的")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("plugins")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SentryWebpackPlugin")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" path"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("resolve")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__dirname"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'../build/static/js/'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//需要上传到sentry服务器的文件，只需上传.map文件即可")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("ignore")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'node_modules'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'webpack.config.js'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//忽略文件夹或文件不要被检测")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("configFile")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'../.sentryclirc'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//用来替代第二步的.sentryclirc文件 需要有对应的文件 默认不配置即可")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token literal-property property"}},[s._v("urlPrefix")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'~/static/js/'")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//自己项目中访问.map静态资源的文件夹的地址")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br")])]),t("ol",{attrs:{start:"3"}},[t("li",[s._v("在项目根目录新建.sentryclirc文件，进行sentry项目地址等相关配置")])]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("[defaults]\nproject=项目名称\norg=组织settings -> settings/organization-slug\nurl=sentry地址\n\n[auth]\ntoken=sentry的Auth Token，settings -> account -> api -> auth-tokens\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("p",[s._v("以上配置完成后，sentry平台内部会做map文件和压缩js文件的关联，一般线上环境我们需要将.map文件删除，防止源代码暴漏，所以在构建之后需要手动命令删除rimraf ./build/*.map（根据项目生成的.map文件目录动态调整命令）")]),s._v(" "),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v(' "prod": "dotenv -e ./env/.prod npm run build && rimraf ./build/*.map",\n')])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ol",{attrs:{start:"4"}},[t("li",[s._v("以上配置完成后，我们再回到sentry中，查看报错的问题")])]),s._v(" "),t("p",[t("img",{attrs:{src:a(322),alt:"error-source"}})])])}),[],!1,null,null,null);t.default=n.exports}}]);