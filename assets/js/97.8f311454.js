(window.webpackJsonp=window.webpackJsonp||[]).push([[97],{435:function(v,_,t){"use strict";t.r(_);var i=t(14),l=Object(i.a)({},(function(){var v=this,_=v._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[_("h1",{attrs:{id:"简介"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[v._v("#")]),v._v(" 简介")]),v._v(" "),_("p",[v._v("CI/CD是指持续集成和持续交付/部署（Continuous Integration and Continuous Delivery/Deployment）。")]),v._v(" "),_("p",[v._v("CI/CD是一种自动化软件开发和交付流程，可以帮助团队更快地交付高质量的软件，同时减少手动操作所带来的错误和风险。它还可以提高团队的协作和沟通能力，促进软件开发的持续改进。")]),v._v(" "),_("p",[v._v("从前端的角度看，CI/CD的流程中涉及：")]),v._v(" "),_("ul",[_("li",[v._v("CI：代码push到托管平台之后的lint测试、单元测试")]),v._v(" "),_("li",[v._v("CD：将build后的项目丢到远端 Nginx 的静态资源目录下")])]),v._v(" "),_("h2",{attrs:{id:"持续集成-ci"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#持续集成-ci"}},[v._v("#")]),v._v(" 持续集成（CI）")]),v._v(" "),_("p",[v._v("持续集成是一种软件开发方法，它将代码的集成、构建和测试自动化，并将这些过程与团队的协作和版本控制系统集成在一起。这种方法的目的是尽早发现和解决软件开发过程中的问题，从而提高软件开发的质量和速度。")]),v._v(" "),_("p",[v._v("持续集成的实现需要使用一些工具和技术，如版本控制系统、构建服务器、测试工具、代码质量分析工具等。开发人员将代码提交到版本控制系统中，构建服务器会自动从版本控制系统中获取最新的代码，自动构建和测试代码，并将测试结果反馈给开发人员。如果代码有问题，开发人员可以及时发现并解决问题，从而保证代码的质量和稳定性。")]),v._v(" "),_("p",[v._v("持续集成的宗旨是避免集成问题，提升软件的质量和缩短交付时间。持续集成应遵循以下原则：")]),v._v(" "),_("ul",[_("li",[v._v("所有开发人员都需要做本地构建，然后提交到版本控制库中，从而确保变更不易导致持续集成失败")]),v._v(" "),_("li",[v._v("开发人员每天至少需要从版本库中更新一次代码")]),v._v(" "),_("li",[v._v("每次构建都要100%通过")]),v._v(" "),_("li",[v._v("每次构建都可以生成可发布的产品")]),v._v(" "),_("li",[v._v("修复失败的构建是优先级最高的问题")]),v._v(" "),_("li",[v._v("测试是未来，未来是测试")])]),v._v(" "),_("p",[v._v("持续集成是敏捷开发方法的重要组成部分，它可以帮助团队更快地交付高质量的软件，同时也有助于减少开发过程中的错误和漏洞。")]),v._v(" "),_("h2",{attrs:{id:"持续部署-cd"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#持续部署-cd"}},[v._v("#")]),v._v(" 持续部署（CD）")]),v._v(" "),_("p",[v._v("持续部署是指将经过测试和验证的代码自动部署到目标环境中。一般情况下，持续部署仅用来部署非生产环境。因为自动化的测试手段并不能保证业务逻辑的准确性，所以需要依赖手工测试。")]),v._v(" "),_("p",[v._v("持续部署是CI/CD流程的一部分，是自动化软件开发和交付流程中的最后一步。它需要使用一些工具和技术，如自动化部署工具、容器化技术、云计算平台等。")]),v._v(" "),_("p",[v._v("持续部署的好处包括：")]),v._v(" "),_("ul",[_("li",[v._v("减少手动操作和人为错误，提高软件开发的效率和质量")]),v._v(" "),_("li",[v._v("更快地发现和解决问题")]),v._v(" "),_("li",[v._v("改善团队的协作和沟通能力，促进软件开发的持续改进")])]),v._v(" "),_("p",[v._v("然而，持续部署也存在一些挑战和风险，如自动化测试不充分、部署过程中出现问题导致故障等。因此，团队需要仔细规划和实施持续部署流程，并不断改进和优化。")])])}),[],!1,null,null,null);_.default=l.exports}}]);