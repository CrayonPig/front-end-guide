(window.webpackJsonp=window.webpackJsonp||[]).push([[96],{472:function(t,e,n){"use strict";n.r(e);var a=n(25),c=Object(a.a)({},(function(){var t=this,e=t._self._c;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"类型约束"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#类型约束"}},[t._v("#")]),t._v(" 类型约束")]),t._v(" "),e("p",[t._v("由于JavaScript本身的局限性，它注定难以胜任大型项目的开发和维护。因此微软开发了TypeScript，使其能够胜任开发大型项目。TypeScript 是在 JavaScript 的基础上添加静态类型定义构建而成的，它能够被 tsc 编译器或 Babel 转译为 JavaScript 代码，运行在任何浏览器中。")]),t._v(" "),e("p",[t._v('TypeScript 发展至今，已经成为大型项目的标配，它提供的静态类型系统大大增强了代码的可读性及可维护性。TypeScript 设计了一套类型机制来保证编译时的强类型判断: 变量在初始化时就会被明确指定类型，后续任何其他类型的赋值都将引起编译错误。在下面的示例中，初始化时定义foo 为数字 1，TypeScript 将自动进行类型推断，明确 foo 的类型是 number。当开发人员尝试将字符串"2"赋值给 foo 时，就会自动进行错误提示。')]),t._v(" "),e("div",{staticClass:"language-js line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-js"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("let")]),t._v(" foo "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\nfoo "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token string"}},[t._v("'2'")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token comment"}},[t._v('// 不能将类型"string"分配给类型"number”。ts(2322)')]),t._v("\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1731410181000-83367"}},[t._v("成功")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":'let foo = 1;\nfoo = \'2\'; // 不能将类型"string"分配给类型"number”。ts(2322)\n',"data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1731410181000-83367","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("复制代码")])])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br"),e("span",{staticClass:"line-number"},[t._v("2")]),e("br")])]),e("p",[t._v("同时，TypeScript 提供了最新的 JavaScript 特性，可以帮助开发人员使用更前沿的 API 能力构建重友好、高性能的组件。通过使用 TypeScript，能有效提升前端工程代码的可读性和可维护性")]),t._v(" "),e("ul",[e("li",[t._v("TypeScript 增强了开发工具的能力，能够根据编码情况自动进行代码补全、文件用跳转等操作。")]),t._v(" "),e("li",[t._v("类型定义弥补了前端文档缺失的问题，通过类型定义即可知道对应字段的含义和函数的使用方式。")]),t._v(" "),e("li",[t._v("强类型检测使代码迁移、重构以及手误等原因导致的变量名写错,可以在编译阶段提前暴露。")])]),t._v(" "),e("p",[t._v("TypeScript 对于 JavaScript 的兼容性极强，开发人员可以对项目做渐进式迁移。即使在迁移过程中遇到 TypeScript 编译报错，开发人员也可以暂时跳过报错，快速生成 JavaScript 文件。")]),t._v(" "),e("p",[t._v("开源社区许多优秀的第三方库都是基于 JavaScript 实现的，并不支持 TypeScript 的类型定义针对这一问题，TypeScript 也进行了特殊处理。第三方库可以选择使用 TypeScript 进行重写来支持类型提示，也可以选择编写单独的类型文件 (.d.ts)来实现类型定义，只需要保证类型文件名和原文件名相同且处于同一路径下即可。开源社区大部分的主流第三方库都已经支持 TypeScript 的类型定义，例如，著名的 jQuery。")]),t._v(" "),e("div",{staticClass:"language-bash line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-bash"}},[e("code",[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("npm")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token function"}},[t._v("install")]),t._v(" @types/jquery\n")]),e("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[e("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1731410181000-36973"}},[t._v("成功")]),e("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"npm install @types/jquery\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1731410181000-36973","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("复制代码")])])]),t._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[t._v("1")]),e("br")])]),e("p",[t._v("TypeScript 作为 JavaScript 的超集是非常成功的，无论是类型检测、语法提示等功能，还是丰富的开源社区生态，都为其取得巨大成功做出了贡献。")])])}),[],!1,null,null,null);e.default=c.exports}}]);