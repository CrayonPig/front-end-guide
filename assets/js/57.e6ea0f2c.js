(window.webpackJsonp=window.webpackJsonp||[]).push([[57],{377:function(s,t,e){"use strict";e.r(t);var a=e(10),r=Object(a.a)({},(function(){var s=this,t=s._self._c;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"package-json-字段解析"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#package-json-字段解析"}},[s._v("#")]),s._v(" package.json 字段解析")]),s._v(" "),t("h2",{attrs:{id:"type"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#type"}},[s._v("#")]),s._v(" type")]),s._v(" "),t("p",[s._v("在 "),t("code",[s._v("package.json")]),s._v(" 文件中，"),t("code",[s._v("type")]),s._v(" 属性用于指定模块的类型，即模块使用的模块系统。"),t("code",[s._v("type")]),s._v(" 属性的值影响模块的导入和导出方式，以及模块的解析和加载行为。它告诉构建工具、打包工具或者运行时环境如何正确处理模块。")]),s._v(" "),t("p",[s._v("根据不同的值，"),t("code",[s._v("type")]),s._v(" 属性可以有以下几种常见的取值：")]),s._v(" "),t("ol",[t("li",[t("code",[s._v('"commonjs"')]),s._v("：表示模块使用 CommonJS 模块系统。这是 Node.js 默认的模块系统，也是旧版的 JavaScript 模块系统。")]),s._v(" "),t("li",[t("code",[s._v('"module"')]),s._v("：表示模块使用 ES 模块（ES Modules）系统。ES 模块是现代 JavaScript 的官方标准模块系统，它提供了更强大的模块化语法和功能。")]),s._v(" "),t("li",[t("code",[s._v('"umd"')]),s._v("：表示模块既可以在浏览器端使用，也可以在 Node.js 环境中使用。这种类型的模块通常用于跨平台的通用模块，可以通过不同的模块系统进行加载。")]),s._v(" "),t("li",[t("code",[s._v('"module" 和 "main"')]),s._v("：使用这种形式表示模块既可以使用 ES 模块系统，也可以使用 CommonJS 模块系统。这种类型的设置在同时兼容浏览器和 Node.js 的项目中很常见。")])]),s._v(" "),t("p",[s._v("请注意，"),t("code",[s._v("type")]),s._v(" 属性在一些构建工具和平台中可能有特定的用途或扩展，具体的行为可能会有所不同。因此，在使用特定的构建工具或平台时，最好查阅相关文档以了解更多细节。")]),s._v(" "),t("div",{staticClass:"custom-block tip"},[t("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),t("p",[s._v("不管type字段的值是多少, 以.mjs后缀名的文件总是被当作ES6模块，而以.cjs后缀名的文件总是被当成CommonJS模块，但不建议混用")])]),s._v(" "),t("h2",{attrs:{id:"script"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#script"}},[s._v("#")]),s._v(" script")]),s._v(" "),t("p",[s._v("npm 允许在 "),t("code",[s._v("package.json")]),s._v(" 文件里面，使用 "),t("code",[s._v("scripts")]),s._v(" 字段定义脚本命令, "),t("code",[s._v("scripts")]),s._v(" 的每一个对象都对应一条脚本命令。")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ...")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"scripts"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node build.js"')]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("p",[s._v("上述示例中，"),t("code",[s._v("build")]),s._v(" 对应的脚本是 "),t("code",[s._v("node build.js")]),s._v("，表示在项目根目录执行 "),t("code",[s._v("npm run build")]),s._v(" 时，就执行 "),t("code",[s._v("node build.js")]),s._v(" 命令。")]),s._v(" "),t("p",[s._v("npm 脚本的原理非常简单。每当执行 "),t("code",[s._v("npm run")]),s._v("，就会自动新建一个 "),t("code",[s._v("Shell")]),s._v("，在这个 "),t("code",[s._v("Shell")]),s._v(" 里面执行指定的脚本命令。因此，只要是 Shell（一般是 Bash）可以运行的命令，就可以写在 npm 脚本里面。")]),s._v(" "),t("p",[s._v("比较特别的是，"),t("code",[s._v("npm run")]),s._v("新建的这个 "),t("code",[s._v("Shell")]),s._v("，会将当前目录的"),t("code",[s._v("node_modules/.bin")]),s._v("子目录加入PATH变量，执行结束后，再将PATH变量恢复原样。")]),s._v(" "),t("h3",{attrs:{id:"默认值"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#默认值"}},[s._v("#")]),s._v(" 默认值")]),s._v(" "),t("p",[s._v("一般来说，npm 脚本由用户提供。但是，npm 对两个脚本提供了默认值。也就是说，这两个脚本不用定义，就可以直接使用。")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"start"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node server.js"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"install"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node-gyp rebuild"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("上面代码中，"),t("code",[s._v("npm run start")]),s._v(" 的默认值是 "),t("code",[s._v("node server.js")]),s._v("，前提是项目根目录下有 "),t("code",[s._v("server.js")]),s._v(" 这个脚本； "),t("code",[s._v("npm run install")]),s._v(" 的默认值是 "),t("code",[s._v("node-gyp rebuild")]),s._v(" ，前提是项目根目录下有 "),t("code",[s._v("binding.gyp")]),s._v(" 文件。")]),s._v(" "),t("h3",{attrs:{id:"钩子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#钩子"}},[s._v("#")]),s._v(" 钩子")]),s._v(" "),t("p",[s._v("npm 脚本有 "),t("code",[s._v("pre")]),s._v(" 和 "),t("code",[s._v("post")]),s._v(" 两个钩子。举例来说，"),t("code",[s._v("build")]),s._v(" 脚本命令的钩子就是 "),t("code",[s._v("prebuild")]),s._v(" 和 "),t("code",[s._v("postbuild")]),s._v(" 。")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"prebuild"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo I run before the build script"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cross-env NODE_ENV=production webpack"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"postbuild"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"echo I run after the build script"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("用户执行 "),t("code",[s._v("npm run build")]),s._v(" 的时候，会自动按照下面的顺序执行。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run prebuild "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run build "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run postbuild\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("因此，可以在这两个钩子里面，完成一些准备工作和清理工作。下面是一个例子。")]),s._v(" "),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"clean"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"rimraf ./dist && mkdir dist"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"prebuild"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"npm run clean"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"build"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cross-env NODE_ENV=production webpack"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("p",[s._v("npm 默认提供下面这些钩子。")]),s._v(" "),t("ul",[t("li",[s._v("prepublish，postpublish")]),s._v(" "),t("li",[s._v("preinstall，postinstall")]),s._v(" "),t("li",[s._v("preuninstall，postuninstall")]),s._v(" "),t("li",[s._v("preversion，postversion")]),s._v(" "),t("li",[s._v("pretest，posttest")]),s._v(" "),t("li",[s._v("prestop，poststop")]),s._v(" "),t("li",[s._v("prestart，poststart")]),s._v(" "),t("li",[s._v("prerestart，postrestart")])]),s._v(" "),t("p",[s._v("自定义的脚本命令也可以加上 "),t("code",[s._v("pre")]),s._v(" 和"),t("code",[s._v("post")]),s._v("钩子。比如，"),t("code",[s._v("myscript")]),s._v("这个脚本命令，也有"),t("code",[s._v("premyscript")]),s._v("和"),t("code",[s._v("postmyscript")]),s._v("钩子。不过，双重的"),t("code",[s._v("pre")]),s._v("和"),t("code",[s._v("post")]),s._v("无效，比如"),t("code",[s._v("prepretest")]),s._v("和"),t("code",[s._v("postposttest")]),s._v("是无效的。")]),s._v(" "),t("p",[s._v("更多有关 scripts 命令，可参考"),t("a",{attrs:{href:"https://www.ruanyifeng.com/blog/2016/10/npm_scripts.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("阮一峰的npm scripts 使用指南"),t("OutboundLink")],1)])])}),[],!1,null,null,null);t.default=r.exports}}]);