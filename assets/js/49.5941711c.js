(window.webpackJsonp=window.webpackJsonp||[]).push([[49],{353:function(e,v,_){"use strict";_.r(v);var i=_(10),l=Object(i.a)({},(function(){var e=this,v=e._self._c;return v("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[v("h1",{attrs:{id:"code-review"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#code-review"}},[e._v("#")]),e._v(" Code Review")]),e._v(" "),v("p",[e._v("在前端开发中，Code Review 是非常重要的一个环节，可以有效地提高代码质量、减少错误和维护成本。")]),e._v(" "),v("p",[e._v("但在大部分团队中，认真去做Code Review的很少，有的只是用lint工具扫描一遍，有的可能直接就没有这个环节，代码质量只能依赖后续测试团队。这个固然有一部分是敏捷开发带来的弊端，大部分更是因为团队不去重视的结果。更多的原因是团队内推行Code Review后发现这是一个吃力不讨好的流程，耗费时间过长，讲解枯燥，维护成本过高，收益过小。")]),e._v(" "),v("h2",{attrs:{id:"code-review的好处"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#code-review的好处"}},[e._v("#")]),e._v(" Code Review的好处")]),e._v(" "),v("p",[e._v("实际上，Code Review可以为我们带来大量的好处：")]),e._v(" "),v("ul",[v("li",[e._v("提高代码质量：Code Review可以帮助开发者发现潜在的问题、漏洞和错误，以及提供更好的实现方式，从而提高代码质量。")]),e._v(" "),v("li",[e._v("减少维护成本：在Code Review过程中，可以发现代码中的问题和漏洞，并及时修改，避免了在上线后出现问题需要大量时间和精力进行维护的情况。")]),e._v(" "),v("li",[e._v("加强团队协作：Code Review可以促进团队内成员之间的交流和协作，提高团队整体的代码质量和开发效率。")]),e._v(" "),v("li",[e._v("提高代码可读性：Code Review可以帮助开发者发现代码可读性的问题，例如命名、注释、代码结构等方面，从而提高代码的可读性。")]),e._v(" "),v("li",[e._v("检查代码安全性：Code Review可以检查代码中的安全问题，例如XSS、CSRF、SQL注入等，从而提高代码的安全性。")])]),e._v(" "),v("h2",{attrs:{id:"如何code-review"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#如何code-review"}},[e._v("#")]),e._v(" 如何Code Review？")]),e._v(" "),v("p",[e._v("大部分团队Code Review失败的原因都是因为不知道如何去做，每次review的时候，都是让开发者拿自己代码逐行去讲解，底下倾听者很快就陷入细枝末节的枯燥情绪中，变得困倦。")]),e._v(" "),v("p",[e._v("那么我们应该如何去正确的review呢？")]),e._v(" "),v("ol",[v("li",[e._v("确立开发规范，包含但不局限于代码规范，命名规范等")]),e._v(" "),v("li",[e._v("代码格式问题可在开发时通过自动化工具解决，不应放在日常Code Review中\n"),v("ul",[v("li",[e._v("VsCode 格式化")]),e._v(" "),v("li",[e._v("标准的Eslint规则 + husky(本地pre-commit校验)")]),e._v(" "),v("li",[e._v("代码仓库CI流水线校验")])])]),e._v(" "),v("li",[e._v("遵循先设计，再编码的流程。review时对照前期评审好的设计，可节省大量时间")]),e._v(" "),v("li",[e._v("技术Leader或对应模块负责人，应在一起开会前将代码提前review。开会时直接指出具体问题")])]),e._v(" "),v("p",[e._v("在我看来，Code Review 考验的更多是技术Leader的能力，在前期刚推行Code Review时，需要Leader牺牲自己的时间去挨个审查代码。后续随着团队习惯培养到一定成功后，可以让团队内互相Review，逐渐的将这个习惯保留下来，Code Review就算成功了。")]),e._v(" "),v("h2",{attrs:{id:"重点关注问题点"}},[v("a",{staticClass:"header-anchor",attrs:{href:"#重点关注问题点"}},[e._v("#")]),e._v(" 重点关注问题点")]),e._v(" "),v("p",[e._v("常见需要Code Review的问题点：")]),e._v(" "),v("ol",[v("li",[e._v("重要模块整体review")]),e._v(" "),v("li",[e._v("滥用全局变量")]),e._v(" "),v("li",[e._v("命名规范")]),e._v(" "),v("li",[e._v("闭包内部变量未被销毁")]),e._v(" "),v("li",[e._v("计时器是否及时清理")]),e._v(" "),v("li",[e._v("监听事件是否有解绑")]),e._v(" "),v("li",[e._v("第三方库的销毁函数，在页面卸载时也需要调用，比如EventBus：")]),e._v(" "),v("li",[e._v("v-if 指令导致的内存泄露")]),e._v(" "),v("li",[e._v("异步操作是否有异常处理")]),e._v(" "),v("li",[e._v("组件是否需要拆分")]),e._v(" "),v("li",[e._v("TypeScript中滥用any")]),e._v(" "),v("li",[e._v("未用防抖节流")]),e._v(" "),v("li",[e._v("动画减少回流与重绘")]),e._v(" "),v("li",[e._v("关键业务未加注释")]),e._v(" "),v("li",[e._v("等等")])])])}),[],!1,null,null,null);v.default=l.exports}}]);