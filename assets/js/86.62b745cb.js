(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{421:function(t,n,a){"use strict";a.r(n);var s=a(14),e=Object(s.a)({},(function(){var t=this,n=t._self._c;return n("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[n("h1",{attrs:{id:"gitlab-pipelines"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-pipelines"}},[t._v("#")]),t._v(" GitLab Pipelines")]),t._v(" "),n("p",[t._v("相对于github而言，企业中更多使用的是Gitlab。Gitlab也有类似于GitHub Actions的功能，名为GitLab Pipelines。")]),t._v(" "),n("p",[t._v("在GitLab Pipelines中，每个流水线都由一个或多个Job组成，每个Job是独立运行的任务，可以通过配置文件来定义Job的具体操作。常见的GitLab Pipelines配置文件是"),n("code",[t._v("项目根目录")]),t._v("的.gitlab-ci.yml，它使用YAML格式来定义Pipeline的配置。")]),t._v(" "),n("h2",{attrs:{id:"yaml"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#yaml"}},[t._v("#")]),t._v(" yaml")]),t._v(" "),n("p",[t._v("下面是一个简单的.gitlab-ci.yml文件的示例，该文件定义了一个执行前端构建任务的Pipeline：")]),t._v(" "),n("div",{staticClass:"language-yaml line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-yaml"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义使用的Docker镜像")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("image")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),n("span",{pre:!0,attrs:{class:"token number"}},[t._v("12")]),t._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义流水线的各个阶段")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stages")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" build\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" test\n  "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" deploy\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义需要缓存的目录，以便在下一次构建时加速构建过程")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cache")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" node_modules/\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义构建阶段")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("build")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定该阶段的名称")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" build\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在Docker容器中执行的命令")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm install\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm run build\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 将构建产生的产物进行存储")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("artifacts")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("paths")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" build/\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义测试阶段")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("test")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定该阶段的名称")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" test\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在Docker容器中执行的命令")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm install\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" npm test\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义部署阶段")]),t._v("\n"),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 指定该阶段的名称")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("stage")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" deploy\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 定义该阶段只有在构建和测试阶段通过后才会执行")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("only")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" master\n  "),n("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 在Docker容器中执行的命令")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" apt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get update\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" apt"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("get install "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("y sshpass\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" sshpass "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("p $DEPLOY_PASSWORD scp "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("r build/* $DEPLOY_USER@$DEPLOY_HOST"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("$DEPLOY_PATH\n")]),n("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[n("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1725881873543-5578"}},[t._v("成功")]),n("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":"# 定义使用的Docker镜像\nimage: node:12\n\n# 定义流水线的各个阶段\nstages:\n  - build\n  - test\n  - deploy\n\n# 定义需要缓存的目录，以便在下一次构建时加速构建过程\ncache:\n  paths:\n    - node_modules/\n\n# 定义构建阶段\nbuild:\n  # 指定该阶段的名称\n  stage: build\n  # 在Docker容器中执行的命令\n  script:\n    - npm install\n    - npm run build\n  # 将构建产生的产物进行存储\n  artifacts:\n    paths:\n      - build/\n\n# 定义测试阶段\ntest:\n  # 指定该阶段的名称\n  stage: test\n  # 在Docker容器中执行的命令\n  script:\n    - npm install\n    - npm test\n\n# 定义部署阶段\ndeploy:\n  # 指定该阶段的名称\n  stage: deploy\n  # 定义该阶段只有在构建和测试阶段通过后才会执行\n  only:\n    - master\n  # 在Docker容器中执行的命令\n  script:\n    - apt-get update\n    - apt-get install -y sshpass\n    - sshpass -p $DEPLOY_PASSWORD scp -r build/* $DEPLOY_USER@$DEPLOY_HOST:$DEPLOY_PATH\n","data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1725881873543-5578","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("复制代码")])])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br"),n("span",{staticClass:"line-number"},[t._v("12")]),n("br"),n("span",{staticClass:"line-number"},[t._v("13")]),n("br"),n("span",{staticClass:"line-number"},[t._v("14")]),n("br"),n("span",{staticClass:"line-number"},[t._v("15")]),n("br"),n("span",{staticClass:"line-number"},[t._v("16")]),n("br"),n("span",{staticClass:"line-number"},[t._v("17")]),n("br"),n("span",{staticClass:"line-number"},[t._v("18")]),n("br"),n("span",{staticClass:"line-number"},[t._v("19")]),n("br"),n("span",{staticClass:"line-number"},[t._v("20")]),n("br"),n("span",{staticClass:"line-number"},[t._v("21")]),n("br"),n("span",{staticClass:"line-number"},[t._v("22")]),n("br"),n("span",{staticClass:"line-number"},[t._v("23")]),n("br"),n("span",{staticClass:"line-number"},[t._v("24")]),n("br"),n("span",{staticClass:"line-number"},[t._v("25")]),n("br"),n("span",{staticClass:"line-number"},[t._v("26")]),n("br"),n("span",{staticClass:"line-number"},[t._v("27")]),n("br"),n("span",{staticClass:"line-number"},[t._v("28")]),n("br"),n("span",{staticClass:"line-number"},[t._v("29")]),n("br"),n("span",{staticClass:"line-number"},[t._v("30")]),n("br"),n("span",{staticClass:"line-number"},[t._v("31")]),n("br"),n("span",{staticClass:"line-number"},[t._v("32")]),n("br"),n("span",{staticClass:"line-number"},[t._v("33")]),n("br"),n("span",{staticClass:"line-number"},[t._v("34")]),n("br"),n("span",{staticClass:"line-number"},[t._v("35")]),n("br"),n("span",{staticClass:"line-number"},[t._v("36")]),n("br"),n("span",{staticClass:"line-number"},[t._v("37")]),n("br"),n("span",{staticClass:"line-number"},[t._v("38")]),n("br"),n("span",{staticClass:"line-number"},[t._v("39")]),n("br"),n("span",{staticClass:"line-number"},[t._v("40")]),n("br"),n("span",{staticClass:"line-number"},[t._v("41")]),n("br"),n("span",{staticClass:"line-number"},[t._v("42")]),n("br"),n("span",{staticClass:"line-number"},[t._v("43")]),n("br"),n("span",{staticClass:"line-number"},[t._v("44")]),n("br"),n("span",{staticClass:"line-number"},[t._v("45")]),n("br"),n("span",{staticClass:"line-number"},[t._v("46")]),n("br"),n("span",{staticClass:"line-number"},[t._v("47")]),n("br"),n("span",{staticClass:"line-number"},[t._v("48")]),n("br")])]),n("h2",{attrs:{id:"gitlab-runner"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#gitlab-runner"}},[t._v("#")]),t._v(" Gitlab Runner")]),t._v(" "),n("p",[t._v("与GitHub Actions一样的是，GitLab Pipelines需要配置GitLab Runner才可以执行。")]),t._v(" "),n("p",[t._v("GitLab Runner需要和GitLab服务器进行通信，并且需要注册到GitLab服务器上，以便GitLab可以向Runner发送作业。每个GitLab Runner都有自己的标识符（Runner Token），这个标识符用于注册Runner到GitLab服务器上。")]),t._v(" "),n("p",[t._v("GitLab Runner的注册过程可以通过以下步骤完成：")]),t._v(" "),n("ul",[n("li",[t._v("安装GitLab Runner，可以从官网下载适合自己操作系统的二进制文件或者使用Docker容器来安装。")]),t._v(" "),n("li",[t._v("执行gitlab-runner register命令，根据提示输入GitLab服务器的地址、Runner Token、Runner的描述信息等等。")]),t._v(" "),n("li",[t._v("在GitLab服务器上确认注册信息，可以在项目的CI/CD设置页面中查看新注册的Runner。")])]),t._v(" "),n("p",[t._v("下面是一些具体的注册命令示例，假设GitLab服务器地址为https://gitlab.example.com，Runner Token为XXXXXXXXXXXXXXXXXXXX：")]),t._v(" "),n("h3",{attrs:{id:"使用默认配置注册runner"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用默认配置注册runner"}},[t._v("#")]),t._v(" 使用默认配置注册Runner：")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" gitlab-runner register "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--url")]),t._v(" https://gitlab.example.com "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --registration-token XXXXXXXXXXXXXXXXXXXX "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--description")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My Runner"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--executor")]),t._v(" shell\n")]),n("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[n("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1725881873544-77035"}},[t._v("成功")]),n("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":'sudo gitlab-runner register \\\n  --url https://gitlab.example.com \\\n  --registration-token XXXXXXXXXXXXXXXXXXXX \\\n  --description "My Runner" \\\n  --executor shell\n',"data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1725881873544-77035","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("复制代码")])])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br")])]),n("h3",{attrs:{id:"使用docker容器注册runner"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#使用docker容器注册runner"}},[t._v("#")]),t._v(" 使用Docker容器注册Runner：")]),t._v(" "),n("div",{staticClass:"language-bash line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" run "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-d")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--name")]),t._v(" gitlab-runner "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--restart")]),t._v(" always "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" /srv/gitlab-runner/config:/etc/gitlab-runner "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-v")]),t._v(" /var/run/docker.sock:/var/run/docker.sock "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  gitlab/gitlab-runner:latest\n"),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("sudo")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("exec")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("-it")]),t._v(" gitlab-runner gitlab-runner register "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--url")]),t._v(" https://gitlab.example.com "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --registration-token XXXXXXXXXXXXXXXXXXXX "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--description")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"My Runner"')]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  "),n("span",{pre:!0,attrs:{class:"token parameter variable"}},[t._v("--executor")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[t._v("docker")]),t._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("\\")]),t._v("\n  --docker-image "),n("span",{pre:!0,attrs:{class:"token string"}},[t._v('"docker:stable"')]),t._v("\n")]),n("div",{pre:!0,attrs:{class:"m-mdic-copy-wrapper"}},[n("div",{pre:!0,attrs:{class:"u-mdic-copy-notify",id:"j-notify-1725881873544-27266"}},[t._v("成功")]),n("button",{pre:!0,attrs:{class:"u-mdic-copy-btn j-mdic-copy-btn","data-mdic-content":'sudo docker run -d --name gitlab-runner \\\n  --restart always \\\n  -v /srv/gitlab-runner/config:/etc/gitlab-runner \\\n  -v /var/run/docker.sock:/var/run/docker.sock \\\n  gitlab/gitlab-runner:latest\nsudo docker exec -it gitlab-runner gitlab-runner register \\\n  --url https://gitlab.example.com \\\n  --registration-token XXXXXXXXXXXXXXXXXXXX \\\n  --description "My Runner" \\\n  --executor docker \\\n  --docker-image "docker:stable"\n',"data-mdic-attach-content":"","data-mdic-notify-id":"j-notify-1725881873544-27266","data-mdic-notify-delay":"2000","data-mdic-copy-fail-text":"copy fail",onclick:"!function(t){const e={copy:(t='',e='')=>new Promise((c,o)=>{const n=document.createElement('textarea'),d=e?`\\n\\n${e}`:e;n.value=`${t}${d}`,document.body.appendChild(n),n.select();try{const t=document.execCommand('copy');document.body.removeChild(n),t?c():o()}catch(t){document.body.removeChild(n),o()}}),btnClick(t){const c=t&&t.dataset?t.dataset:{},o=c.mdicNotifyId,n=document.getElementById(o),d=c.mdicNotifyDelay,i=c.mdicCopyFailText;e.copy(c.mdicContent,c.mdicAttachContent).then(()=>{n.style.display='block',setTimeout(()=>{n.style.display='none'},d)}).catch(()=>{alert(i)})}};e.btnClick(t)}(this);"}},[t._v("复制代码")])])]),t._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[t._v("1")]),n("br"),n("span",{staticClass:"line-number"},[t._v("2")]),n("br"),n("span",{staticClass:"line-number"},[t._v("3")]),n("br"),n("span",{staticClass:"line-number"},[t._v("4")]),n("br"),n("span",{staticClass:"line-number"},[t._v("5")]),n("br"),n("span",{staticClass:"line-number"},[t._v("6")]),n("br"),n("span",{staticClass:"line-number"},[t._v("7")]),n("br"),n("span",{staticClass:"line-number"},[t._v("8")]),n("br"),n("span",{staticClass:"line-number"},[t._v("9")]),n("br"),n("span",{staticClass:"line-number"},[t._v("10")]),n("br"),n("span",{staticClass:"line-number"},[t._v("11")]),n("br")])]),n("p",[t._v("在以上命令中，--description参数用于设置Runner的描述信息，--executor参数用于设置Runner的执行方式，可以选择shell、docker或者其他支持的执行方式。注册成功后，可以在GitLab项目的CI/CD设置页面中查看新注册的Runner。")])])}),[],!1,null,null,null);n.default=e.exports}}]);